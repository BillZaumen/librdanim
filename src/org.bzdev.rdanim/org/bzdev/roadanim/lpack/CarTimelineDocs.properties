skidMode = When not defined at a particular time, the previous value of \
	   <CODE>timeline.skidMode</CODE>, or <CODE>skidMode</CODE> \
	   if no value has been provided for a previous time, is used.

reverseMode = When not defined at a particular time, the previous value of \
	   <CODE>timeline.reverseMode</CODE>, or <CODE>reverseMode</CODE> \
	   if no value has been provided for a previous time, is used.

lookString = When not defined at a particular time, the previous value of \
	   <CODE>timeline.lookString</CODE>, or <CODE>lookString</CODE> \
	   if no value has been provided for a previous time, is used.

lookAngle = When not defined at a particular time, the previous value of \
	   <CODE>timeline.lookAngle</CODE>, or <CODE>lookAngle</CODE> \
	   if no value has been provided for a previous time, is used.

looking =  When set to <CODE>true</CODE> at a particular time, \
	the text that will then be displayed will appear offset from the \
	car at an angle from the direction the car is pointed, specified \
	by <CODE>timeline.lookAngle</CODE>,  or specified by \
	<CODE>lookAngle</CODE> when <CODE>timeline.lookAngle</CODE> is not \
	provided. When not defined, the previous \
	value of <CODE>timeline.looking</CODE>, or <CODE>looking</CODE> \
	if no value has been provided for a previous time, is used.

lookingFontColor.alpha =  When not provided at a particular time, \
		       there are two cases: \
		       <UL>\
		         <LI> If <CODE>timeline.lookingFontColor.red</CODE> \
			 <CODE>timeline.lookingFontColor.green</CODE>, and \
			 <CODE>timeline.lookingFontColor.blue</CODE> are also \
			 not provided, the previous value, or previously \
			 defined color, is used. \
			 <LI> If at least one of \
			 <CODE>timeline.lookingFontColor.red</CODE> \
			 <CODE>timeline.lookingFontColor.green</CODE>, or \
			 <CODE>timeline.lookingFontColor.blue</CODE> \
			 are provided, a default alpha value of 255 is used. \
		       </UL>

lookingFontColor.red = When not provided at a particular time, \
		     there are two cases: \
		       <UL>\
		         <LI> If <CODE>timeline.lookingFontColor.alph</CODE> \
			 <CODE>timeline.lookingFontColor.green</CODE>, and \
			 <CODE>timeline.lookingFontColor.blue</CODE> are also \
			 not provided, the previous value, or previously \
			 defined color, is used. \
			 <LI> If at least one of \
			 <CODE>timeline.lookingFontColor.alpha</CODE> \
			 <CODE>timeline.lookingFontColor.green</CODE>, or \
			 <CODE>timeline.lookingFontColor.blue</CODE> \
			 are provided, a default red value of 0 is used. \
		       </UL>

lookingFontColor.green = When not provided at a particular time, \
		       there are two cases: \
		       <UL>\
		         <LI> If <CODE>timeline.lookingFontColor.alph</CODE> \
			 <CODE>timeline.lookingFontColor.red</CODE>, and \
			 <CODE>timeline.lookingFontColor.green</CODE> are also \
			 not provided, the previous value, or previously \
			 defined color, is used. \
			 <LI> If at least one of \
			 <CODE>timeline.lookingFontColor.alpha</CODE> \
			 <CODE>timeline.lookingFontColor.red</CODE>, or \
			 <CODE>timeline.lookingFontColor.green</CODE> \
			 are provided, a default green value of 0 is used. \
		       </UL>

lookingFontColor.blue = When not provided at a particular time, \
		      there are two cases: \
		       <UL>\
		         <LI> If <CODE>timeline.lookingFontColor.alph</CODE> \
			 <CODE>timeline.lookingFontColor.GREEN</CODE>, and \
			 <CODE>timeline.lookingFontColor.BLUE</CODE> are \
			 not provided, the previous value, or previously \
			 defined color, is used. \
			 <LI> If at least one of \
			 <CODE>timeline.lookingFontColor.red</CODE> \
			 <CODE>timeline.lookingFontColor.GREEN</CODE>, or \
			 <CODE>timeline.lookingFontColor.BLUE</CODE> \
			 are provided, a default green value of 0 is used. \
		       </UL>

driverOffsetX = This offset is positive when the driver is behind the \
	      top of the windshield (as expected).  It determines the \
	      X coordinate of the driver\'s position inside the vehicle \
	      in a coordinate system in which the positive X axis points \
	      along the car\'s centerline towards the front of the vehicle. \
	      One way to migate the effects of a blind spot is for the \
	      driver to move his head, usually sideways but possibly a \
	      bit back and forth as well. This parameter allows one to \
	      show this behavior in a visually obvious way.

driverOffsetY = This offset is positive when the driver is to the left of \
	      the left edge of the vehicle.   It determines the \
	      Y coordinate of the driver\'s position inside the vehicle \
	      in a coordinate system in which the positive X axis points \
	      along the car\'s centerline towards the front of the vehicle. \
	      One way to migate the effects of a blind spot is for the \
	      driver to move his head, usually sideways but possibly a \
	      bit back and forth as well. This parameter allows one to \
	      show this behavior in a visually obvious way.

leftBlindSpotLength = The left blind-spot is displayed by drawing an \
		    isosceles triangle with the vertex between its \
		    two equal-length sides at the position of the driver. \
		    The height of this triangle (the distance from this \
		    vertex to the line connecting the other two vertices) \
		    is the length of the blind spot as displayed.

rightBlindSpotLength = The right blind-spot is displayed by drawing an \
		    isosceles triangle with the vertex between its \
		    two equal-length sides at the position of the driver. \
		    The height of this triangle (the distance from this \
		    vertex to the line connecting the other two vertices) \
		    is the length of the blind spot as displayed.
